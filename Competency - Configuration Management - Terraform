Competency - Configuration Management - Terraform

Terraform is part of our infrastructure as code initiative. It allow us to review our infrastructure before deploying it. It also keep for us a state of our infrastructure at a instant and will always try to revert to that instant in case unwanted changes. 

Wikipedia: https://en.wikipedia.org/wiki/Terraform_(software) 
Home: https://www.terraform.io/ 
How do you prove it?
You can import an already existing resource into terraform.
You can create a module from scratch that will start an aws instance using the last version of ubuntu.
You can create a RDS instance using an external module.
You know how to prevent multiple people to deploy at the same time.
You can, in case of emergency or corrupted state, interact with the terraform state file.
You can force the rebuild of a resource.
How do you improve it?
Tao:
https://www.hashicorp.com/tao-of-hashicorp

Books:
Terraform Up & Running
Infrastructure As Code

Videos:
Hashicorp Youtube

Blogs:
https://gruntwork.io 
https://blog.gruntwork.io/an-introduction-to-terraform-f17df9c6d180
https://blog.gruntwork.io/a-comprehensive-guide-to-terraform-b3d32832baca 

Resources
Official module registry: https://registry.terraform.io/
Pretty print your output: https://github.com/coinbase/terraform-landscape 
Manage terraform changes from a PR: https://www.runatlantis.io/
